bind k send-keys -t.- 'tmkill' Enter

# unbind default prefix and set it to ctrl-a
unbind C-b
set-option -g prefix M-Space
bind-key M-Space send-prefix
# unbind right click, paste with middle click
unbind -n MouseDown3Pane

# so that escapes register immidiately in vim
set -sg escape-time 0

# start index at 1
set -g base-index 1

# mouse support
set -g mouse on

# styling
# set -g status-bg black
set-option -g status-style bg=default
set -g status-fg white

set -g status-right ""
set -g status-left ""

set -g status-justify absolute-centre

set -g status-interval 3

# messy for many fonts
# set -g window-status-current-format "#[fg=blue]ÓÇ∂#[fg=black]#[bg=blue]#I #[bg=brightblack]#[fg=black] #W#[fg=brightblack]#[bg=black]ÓÇ¥ "
# set -g window-status-format "#[fg=brightblack]ÓÇ∂#[fg=black]#[bg=brightblack]#I #[bg=brightblack]#[fg=black] #W#[fg=brightblack]#[bg=black]ÓÇ¥ "

# minimal
# set -g window-status-format "#[fg=brightblue] ÔÑå#[fg=brightblack] #W "
# set -g window-status-current-format "#[fg=blue] ÔÑë#[fg=white] #W "

# more involved
# set -g window-status-format "#(despell -c #W)#[fg=brightblack,dim,italics] #W "
# set -g window-status-current-format "#(despell -c #W)#[fg=white,italics,bold] #W "
set -g window-status-format "#(despell -u -c #W)#[fg=white,dim,italics] #W "
set -g window-status-current-format "#(despell -u -c #W)#[fg=grey,italics,bold] #W "

set -g status-left "\
  #[fg=colour3]‚Ä¢ \
#[fg=colour2]#{?client_prefix,#[fg=colour3],}‚Ä¢ \
#[fg=colour4]#{?client_prefix,#[fg=colour3],}‚Ä¢"

set -g status-right "\
#[fg=colour4]#{?client_prefix,#[fg=colour3],}#{?window_zoomed_flag,ÔÄÇ,‚Ä¢} \
#[fg=colour4]#{?client_prefix,#[fg=colour3],}#{?pane_synchronized,Ôë™,‚Ä¢} \
#[fg=colour8]#(tmux display-message -p '#S') \
#[fg=colour8][#(tmux ls | wc -l)]  "

# turn on window titles
set -g set-titles on

# set wm window title string
set -g set-titles-string '#W'

# automatically set window title
setw -g automatic-rename on
set -g focus-events on

# Renumber windows when one is closed
set-option -g renumber-windows on

# set window split
bind-key C-v split-window -h
bind-key C-s split-window
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
bind-key C command-prompt -p "Name of new window: " "new-window -n '%%'"
bind-key X kill-window

bind-key -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'xclip -in -selection clipboard'

set -g default-terminal "xterm-256color"
# set -ga terminal-overrides ",*256col*:Tc"
# set -g default-terminal "tmux-256color"
set -ga terminal-overrides ",*256col*:RGB"

# set display-panes-time 4000

is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'M-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'M-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'M-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'M-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key Right next-window
bind-key Left previous-window
bind-key M-Left swap-window -t -1\; select-window -t -1
bind-key M-Right swap-window -t +1\; select-window -t +1

# Reload configuration
bind-key R source-file ~/.config/tmux/tmux.conf \; display-message "tmux.conf reloaded"
bind-key r command-prompt "rename-window '%%'"

bind-key S choose-window 'join-pane -v -s "%%"'
bind-key V choose-window 'join-pane -h -s "%%"'
bind-key T break-pane -t :

# same as nvim
bind-key F1 if-shell -F '#{==:#{session_name},scratch}' {
detach-client
} {
display-popup -E "tmux new-session -A -s scratch"
}

set -g pane-active-border-style fg=color4
# set -g pane-border-style bg=color0
set-window-option -g window-active-style bg=terminal
set-window-option -g window-style bg=color0

bind-key "t" run-shell "sesh connect \"$(
  sesh list --icons -t | fzf-tmux -p 55%,60% \
    --no-sort --ansi --border-label ' sesh ' --prompt '‚ö°  ' \
    --header '  ^a all ^t tmux ^g configs ^x zoxide ^d tmux kill ^f find ^e edit conf' \
    --bind 'tab:down,btab:up' \
    --bind 'ctrl-a:change-prompt(‚ö°  )+reload(sesh list --icons)' \
    --bind 'ctrl-t:change-prompt(ü™ü  )+reload(sesh list -t --icons)' \
    --bind 'ctrl-g:change-prompt(‚öôÔ∏è  )+reload(sesh list -c --icons)' \
    --bind 'ctrl-x:change-prompt(üìÅ  )+reload(sesh list -z --icons)' \
    --bind 'ctrl-f:change-prompt(üîé  )+reload(fd -H -d 2 -t d -E .Trash . ~)' \
    --bind 'ctrl-d:execute(tmux kill-session -t {2..})+change-prompt(‚ö°  )+reload(sesh list -t --icons)' \
    --bind 'ctrl-e:execute($EDITOR ~/.config/sesh/sesh.toml)'
)\""
set -g detach-on-destroy off  # don't exit from tmux when closing a session

bind-key P set-window-option synchronize-panes\; display-message "synchronize-panes is now #{?pane_synchronized,on,off}"

set-option -g history-limit 10000
